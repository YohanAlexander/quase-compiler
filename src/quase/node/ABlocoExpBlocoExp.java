/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class ABlocoExpBlocoExp extends PBlocoExp
{
    private TComeca _comeca_;
    private PListaDecCons _listaDecCons_;
    private PExp _exp_;
    private TTermina _termina_;

    public ABlocoExpBlocoExp()
    {
        // Constructor
    }

    public ABlocoExpBlocoExp(
        @SuppressWarnings("hiding") TComeca _comeca_,
        @SuppressWarnings("hiding") PListaDecCons _listaDecCons_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TTermina _termina_)
    {
        // Constructor
        setComeca(_comeca_);

        setListaDecCons(_listaDecCons_);

        setExp(_exp_);

        setTermina(_termina_);

    }

    @Override
    public Object clone()
    {
        return new ABlocoExpBlocoExp(
            cloneNode(this._comeca_),
            cloneNode(this._listaDecCons_),
            cloneNode(this._exp_),
            cloneNode(this._termina_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABlocoExpBlocoExp(this);
    }

    public TComeca getComeca()
    {
        return this._comeca_;
    }

    public void setComeca(TComeca node)
    {
        if(this._comeca_ != null)
        {
            this._comeca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comeca_ = node;
    }

    public PListaDecCons getListaDecCons()
    {
        return this._listaDecCons_;
    }

    public void setListaDecCons(PListaDecCons node)
    {
        if(this._listaDecCons_ != null)
        {
            this._listaDecCons_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaDecCons_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TTermina getTermina()
    {
        return this._termina_;
    }

    public void setTermina(TTermina node)
    {
        if(this._termina_ != null)
        {
            this._termina_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termina_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comeca_)
            + toString(this._listaDecCons_)
            + toString(this._exp_)
            + toString(this._termina_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comeca_ == child)
        {
            this._comeca_ = null;
            return;
        }

        if(this._listaDecCons_ == child)
        {
            this._listaDecCons_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._termina_ == child)
        {
            this._termina_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comeca_ == oldChild)
        {
            setComeca((TComeca) newChild);
            return;
        }

        if(this._listaDecCons_ == oldChild)
        {
            setListaDecCons((PListaDecCons) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._termina_ == oldChild)
        {
            setTermina((TTermina) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
