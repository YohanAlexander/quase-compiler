/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class AIdCallTermo extends PTermo
{
    private PIdCall _idCall_;

    public AIdCallTermo()
    {
        // Constructor
    }

    public AIdCallTermo(
        @SuppressWarnings("hiding") PIdCall _idCall_)
    {
        // Constructor
        setIdCall(_idCall_);

    }

    @Override
    public Object clone()
    {
        return new AIdCallTermo(
            cloneNode(this._idCall_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdCallTermo(this);
    }

    public PIdCall getIdCall()
    {
        return this._idCall_;
    }

    public void setIdCall(PIdCall node)
    {
        if(this._idCall_ != null)
        {
            this._idCall_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idCall_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._idCall_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._idCall_ == child)
        {
            this._idCall_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._idCall_ == oldChild)
        {
            setIdCall((PIdCall) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
