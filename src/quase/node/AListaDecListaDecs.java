/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class AListaDecListaDecs extends PListaDecs
{
    private PDec _dec_;
    private PListaDecs _listaDecs_;

    public AListaDecListaDecs()
    {
        // Constructor
    }

    public AListaDecListaDecs(
        @SuppressWarnings("hiding") PDec _dec_,
        @SuppressWarnings("hiding") PListaDecs _listaDecs_)
    {
        // Constructor
        setDec(_dec_);

        setListaDecs(_listaDecs_);

    }

    @Override
    public Object clone()
    {
        return new AListaDecListaDecs(
            cloneNode(this._dec_),
            cloneNode(this._listaDecs_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaDecListaDecs(this);
    }

    public PDec getDec()
    {
        return this._dec_;
    }

    public void setDec(PDec node)
    {
        if(this._dec_ != null)
        {
            this._dec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dec_ = node;
    }

    public PListaDecs getListaDecs()
    {
        return this._listaDecs_;
    }

    public void setListaDecs(PListaDecs node)
    {
        if(this._listaDecs_ != null)
        {
            this._listaDecs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaDecs_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dec_)
            + toString(this._listaDecs_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dec_ == child)
        {
            this._dec_ = null;
            return;
        }

        if(this._listaDecs_ == child)
        {
            this._listaDecs_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dec_ == oldChild)
        {
            setDec((PDec) newChild);
            return;
        }

        if(this._listaDecs_ == oldChild)
        {
            setListaDecs((PListaDecs) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
