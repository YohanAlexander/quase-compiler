/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class ACondExp extends PExp
{
    private TSe _se_;
    private TParentesesEsquerdo _parentesesEsquerdo_;
    private PExp _exp_;
    private TParentesesDireito _parentesesDireito_;
    private TEntao _entao_;
    private PCondExp2 _condExp2_;

    public ACondExp()
    {
        // Constructor
    }

    public ACondExp(
        @SuppressWarnings("hiding") TSe _se_,
        @SuppressWarnings("hiding") TParentesesEsquerdo _parentesesEsquerdo_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TParentesesDireito _parentesesDireito_,
        @SuppressWarnings("hiding") TEntao _entao_,
        @SuppressWarnings("hiding") PCondExp2 _condExp2_)
    {
        // Constructor
        setSe(_se_);

        setParentesesEsquerdo(_parentesesEsquerdo_);

        setExp(_exp_);

        setParentesesDireito(_parentesesDireito_);

        setEntao(_entao_);

        setCondExp2(_condExp2_);

    }

    @Override
    public Object clone()
    {
        return new ACondExp(
            cloneNode(this._se_),
            cloneNode(this._parentesesEsquerdo_),
            cloneNode(this._exp_),
            cloneNode(this._parentesesDireito_),
            cloneNode(this._entao_),
            cloneNode(this._condExp2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACondExp(this);
    }

    public TSe getSe()
    {
        return this._se_;
    }

    public void setSe(TSe node)
    {
        if(this._se_ != null)
        {
            this._se_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._se_ = node;
    }

    public TParentesesEsquerdo getParentesesEsquerdo()
    {
        return this._parentesesEsquerdo_;
    }

    public void setParentesesEsquerdo(TParentesesEsquerdo node)
    {
        if(this._parentesesEsquerdo_ != null)
        {
            this._parentesesEsquerdo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentesesEsquerdo_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TParentesesDireito getParentesesDireito()
    {
        return this._parentesesDireito_;
    }

    public void setParentesesDireito(TParentesesDireito node)
    {
        if(this._parentesesDireito_ != null)
        {
            this._parentesesDireito_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentesesDireito_ = node;
    }

    public TEntao getEntao()
    {
        return this._entao_;
    }

    public void setEntao(TEntao node)
    {
        if(this._entao_ != null)
        {
            this._entao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._entao_ = node;
    }

    public PCondExp2 getCondExp2()
    {
        return this._condExp2_;
    }

    public void setCondExp2(PCondExp2 node)
    {
        if(this._condExp2_ != null)
        {
            this._condExp2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._condExp2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._se_)
            + toString(this._parentesesEsquerdo_)
            + toString(this._exp_)
            + toString(this._parentesesDireito_)
            + toString(this._entao_)
            + toString(this._condExp2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._se_ == child)
        {
            this._se_ = null;
            return;
        }

        if(this._parentesesEsquerdo_ == child)
        {
            this._parentesesEsquerdo_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._parentesesDireito_ == child)
        {
            this._parentesesDireito_ = null;
            return;
        }

        if(this._entao_ == child)
        {
            this._entao_ = null;
            return;
        }

        if(this._condExp2_ == child)
        {
            this._condExp2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._se_ == oldChild)
        {
            setSe((TSe) newChild);
            return;
        }

        if(this._parentesesEsquerdo_ == oldChild)
        {
            setParentesesEsquerdo((TParentesesEsquerdo) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._parentesesDireito_ == oldChild)
        {
            setParentesesDireito((TParentesesDireito) newChild);
            return;
        }

        if(this._entao_ == oldChild)
        {
            setEntao((TEntao) newChild);
            return;
        }

        if(this._condExp2_ == oldChild)
        {
            setCondExp2((PCondExp2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
