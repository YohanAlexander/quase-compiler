/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class AListaIdListaId extends PListaId
{
    private TId _id_;
    private TVirgula _virgula_;
    private PListaId _listaId_;

    public AListaIdListaId()
    {
        // Constructor
    }

    public AListaIdListaId(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TVirgula _virgula_,
        @SuppressWarnings("hiding") PListaId _listaId_)
    {
        // Constructor
        setId(_id_);

        setVirgula(_virgula_);

        setListaId(_listaId_);

    }

    @Override
    public Object clone()
    {
        return new AListaIdListaId(
            cloneNode(this._id_),
            cloneNode(this._virgula_),
            cloneNode(this._listaId_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaIdListaId(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TVirgula getVirgula()
    {
        return this._virgula_;
    }

    public void setVirgula(TVirgula node)
    {
        if(this._virgula_ != null)
        {
            this._virgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgula_ = node;
    }

    public PListaId getListaId()
    {
        return this._listaId_;
    }

    public void setListaId(PListaId node)
    {
        if(this._listaId_ != null)
        {
            this._listaId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaId_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._virgula_)
            + toString(this._listaId_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._virgula_ == child)
        {
            this._virgula_ = null;
            return;
        }

        if(this._listaId_ == child)
        {
            this._listaId_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._virgula_ == oldChild)
        {
            setVirgula((TVirgula) newChild);
            return;
        }

        if(this._listaId_ == oldChild)
        {
            setListaId((PListaId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
