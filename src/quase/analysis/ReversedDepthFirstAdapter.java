/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.analysis;

import java.util.*;
import quase.node.*;

public class ReversedDepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(Node node)
    {
    }

    public void defaultOut(Node node)
    {
    }

    public void caseStart(Start node)
    {
        inStart(node);
        node.getEOF().apply(this);
        node.getPPrograma().apply(this);
        outStart(node);
    }

    public void inAPrograma(APrograma node)
    {
        defaultIn(node);
    }

    public void outAPrograma(APrograma node)
    {
        defaultOut(node);
    }

    public void caseAPrograma(APrograma node)
    {
        inAPrograma(node);
        if(node.getListaClasse() != null)
        {
            node.getListaClasse().apply(this);
        }
        if(node.getFamilia() != null)
        {
            node.getFamilia().apply(this);
        }
        outAPrograma(node);
    }
    public void inAListaClasseListaClasse(AListaClasseListaClasse node)
    {
        defaultIn(node);
    }

    public void outAListaClasseListaClasse(AListaClasseListaClasse node)
    {
        defaultOut(node);
    }

    public void caseAListaClasseListaClasse(AListaClasseListaClasse node)
    {
        inAListaClasseListaClasse(node);
        if(node.getListaClasse() != null)
        {
            node.getListaClasse().apply(this);
        }
        if(node.getDefClasse() != null)
        {
            node.getDefClasse().apply(this);
        }
        outAListaClasseListaClasse(node);
    }
    public void inAClasseListaClasse(AClasseListaClasse node)
    {
        defaultIn(node);
    }

    public void outAClasseListaClasse(AClasseListaClasse node)
    {
        defaultOut(node);
    }

    public void caseAClasseListaClasse(AClasseListaClasse node)
    {
        inAClasseListaClasse(node);
        if(node.getClasse() != null)
        {
            node.getClasse().apply(this);
        }
        outAClasseListaClasse(node);
    }
    public void inAFamiliaFamilia(AFamiliaFamilia node)
    {
        defaultIn(node);
    }

    public void outAFamiliaFamilia(AFamiliaFamilia node)
    {
        defaultOut(node);
    }

    public void caseAFamiliaFamilia(AFamiliaFamilia node)
    {
        inAFamiliaFamilia(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getListaRelacao() != null)
        {
            node.getListaRelacao().apply(this);
        }
        outAFamiliaFamilia(node);
    }
    public void inAVazioFamilia(AVazioFamilia node)
    {
        defaultIn(node);
    }

    public void outAVazioFamilia(AVazioFamilia node)
    {
        defaultOut(node);
    }

    public void caseAVazioFamilia(AVazioFamilia node)
    {
        inAVazioFamilia(node);
        outAVazioFamilia(node);
    }
    public void inAListaRelacaoListaRelacao(AListaRelacaoListaRelacao node)
    {
        defaultIn(node);
    }

    public void outAListaRelacaoListaRelacao(AListaRelacaoListaRelacao node)
    {
        defaultOut(node);
    }

    public void caseAListaRelacaoListaRelacao(AListaRelacaoListaRelacao node)
    {
        inAListaRelacaoListaRelacao(node);
        if(node.getEComercial() != null)
        {
            node.getEComercial().apply(this);
        }
        if(node.getRelacao() != null)
        {
            node.getRelacao().apply(this);
        }
        outAListaRelacaoListaRelacao(node);
    }
    public void inARelacaoListaRelacao(ARelacaoListaRelacao node)
    {
        defaultIn(node);
    }

    public void outARelacaoListaRelacao(ARelacaoListaRelacao node)
    {
        defaultOut(node);
    }

    public void caseARelacaoListaRelacao(ARelacaoListaRelacao node)
    {
        inARelacaoListaRelacao(node);
        if(node.getRelacao() != null)
        {
            node.getRelacao().apply(this);
        }
        outARelacaoListaRelacao(node);
    }
    public void inARelacao(ARelacao node)
    {
        defaultIn(node);
    }

    public void outARelacao(ARelacao node)
    {
        defaultOut(node);
    }

    public void caseARelacao(ARelacao node)
    {
        inARelacao(node);
        if(node.getFilhaRelacao() != null)
        {
            node.getFilhaRelacao().apply(this);
        }
        if(node.getCid() != null)
        {
            node.getCid().apply(this);
        }
        if(node.getClasse() != null)
        {
            node.getClasse().apply(this);
        }
        outARelacao(node);
    }
    public void inAFilhaRelacao(AFilhaRelacao node)
    {
        defaultIn(node);
    }

    public void outAFilhaRelacao(AFilhaRelacao node)
    {
        defaultOut(node);
    }

    public void caseAFilhaRelacao(AFilhaRelacao node)
    {
        inAFilhaRelacao(node);
        if(node.getCid() != null)
        {
            node.getCid().apply(this);
        }
        if(node.getFilhaDaClasse() != null)
        {
            node.getFilhaDaClasse().apply(this);
        }
        outAFilhaRelacao(node);
    }
    public void inADefClasse(ADefClasse node)
    {
        defaultIn(node);
    }

    public void outADefClasse(ADefClasse node)
    {
        defaultOut(node);
    }

    public void caseADefClasse(ADefClasse node)
    {
        inADefClasse(node);
        if(node.getTermina() != null)
        {
            node.getTermina().apply(this);
        }
        if(node.getMetodos() != null)
        {
            node.getMetodos().apply(this);
        }
        if(node.getAtributos() != null)
        {
            node.getAtributos().apply(this);
        }
        if(node.getComeca() != null)
        {
            node.getComeca().apply(this);
        }
        if(node.getCid() != null)
        {
            node.getCid().apply(this);
        }
        if(node.getClasse() != null)
        {
            node.getClasse().apply(this);
        }
        outADefClasse(node);
    }
    public void inAAtributosAtributos(AAtributosAtributos node)
    {
        defaultIn(node);
    }

    public void outAAtributosAtributos(AAtributosAtributos node)
    {
        defaultOut(node);
    }

    public void caseAAtributosAtributos(AAtributosAtributos node)
    {
        inAAtributosAtributos(node);
        if(node.getAtributos() != null)
        {
            node.getAtributos().apply(this);
        }
        if(node.getDec() != null)
        {
            node.getDec().apply(this);
        }
        outAAtributosAtributos(node);
    }
    public void inAVazioAtributos(AVazioAtributos node)
    {
        defaultIn(node);
    }

    public void outAVazioAtributos(AVazioAtributos node)
    {
        defaultOut(node);
    }

    public void caseAVazioAtributos(AVazioAtributos node)
    {
        inAVazioAtributos(node);
        outAVazioAtributos(node);
    }
    public void inAMetodosMetodos(AMetodosMetodos node)
    {
        defaultIn(node);
    }

    public void outAMetodosMetodos(AMetodosMetodos node)
    {
        defaultOut(node);
    }

    public void caseAMetodosMetodos(AMetodosMetodos node)
    {
        inAMetodosMetodos(node);
        if(node.getMetodos() != null)
        {
            node.getMetodos().apply(this);
        }
        if(node.getDec2() != null)
        {
            node.getDec2().apply(this);
        }
        outAMetodosMetodos(node);
    }
    public void inAVazioMetodos(AVazioMetodos node)
    {
        defaultIn(node);
    }

    public void outAVazioMetodos(AVazioMetodos node)
    {
        defaultOut(node);
    }

    public void caseAVazioMetodos(AVazioMetodos node)
    {
        inAVazioMetodos(node);
        outAVazioMetodos(node);
    }
    public void inAObjDec(AObjDec node)
    {
        defaultIn(node);
    }

    public void outAObjDec(AObjDec node)
    {
        defaultOut(node);
    }

    public void caseAObjDec(AObjDec node)
    {
        inAObjDec(node);
        if(node.getDecObj() != null)
        {
            node.getDecObj().apply(this);
        }
        outAObjDec(node);
    }
    public void inAVarDec(AVarDec node)
    {
        defaultIn(node);
    }

    public void outAVarDec(AVarDec node)
    {
        defaultOut(node);
    }

    public void caseAVarDec(AVarDec node)
    {
        inAVarDec(node);
        if(node.getDecVar() != null)
        {
            node.getDecVar().apply(this);
        }
        outAVarDec(node);
    }
    public void inAConsDec(AConsDec node)
    {
        defaultIn(node);
    }

    public void outAConsDec(AConsDec node)
    {
        defaultOut(node);
    }

    public void caseAConsDec(AConsDec node)
    {
        inAConsDec(node);
        if(node.getDecCons() != null)
        {
            node.getDecCons().apply(this);
        }
        outAConsDec(node);
    }
    public void inADecObj(ADecObj node)
    {
        defaultIn(node);
    }

    public void outADecObj(ADecObj node)
    {
        defaultOut(node);
    }

    public void caseADecObj(ADecObj node)
    {
        inADecObj(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getListaId() != null)
        {
            node.getListaId().apply(this);
        }
        if(node.getCid() != null)
        {
            node.getCid().apply(this);
        }
        if(node.getObjeto() != null)
        {
            node.getObjeto().apply(this);
        }
        outADecObj(node);
    }
    public void inADecVar(ADecVar node)
    {
        defaultIn(node);
    }

    public void outADecVar(ADecVar node)
    {
        defaultOut(node);
    }

    public void caseADecVar(ADecVar node)
    {
        inADecVar(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getListaId() != null)
        {
            node.getListaId().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getVariavel() != null)
        {
            node.getVariavel().apply(this);
        }
        outADecVar(node);
    }
    public void inADecCons(ADecCons node)
    {
        defaultIn(node);
    }

    public void outADecCons(ADecCons node)
    {
        defaultOut(node);
    }

    public void caseADecCons(ADecCons node)
    {
        inADecCons(node);
        if(node.getListaInicializacao() != null)
        {
            node.getListaInicializacao().apply(this);
        }
        if(node.getTipoPrimitivo() != null)
        {
            node.getTipoPrimitivo().apply(this);
        }
        if(node.getConstante() != null)
        {
            node.getConstante().apply(this);
        }
        outADecCons(node);
    }
    public void inAInicializacao(AInicializacao node)
    {
        defaultIn(node);
    }

    public void outAInicializacao(AInicializacao node)
    {
        defaultOut(node);
    }

    public void caseAInicializacao(AInicializacao node)
    {
        inAInicializacao(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getInicializacao() != null)
        {
            node.getInicializacao().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAInicializacao(node);
    }
    public void inAListaIdListaId(AListaIdListaId node)
    {
        defaultIn(node);
    }

    public void outAListaIdListaId(AListaIdListaId node)
    {
        defaultOut(node);
    }

    public void caseAListaIdListaId(AListaIdListaId node)
    {
        inAListaIdListaId(node);
        if(node.getListaId() != null)
        {
            node.getListaId().apply(this);
        }
        if(node.getVirgula() != null)
        {
            node.getVirgula().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAListaIdListaId(node);
    }
    public void inAIdListaId(AIdListaId node)
    {
        defaultIn(node);
    }

    public void outAIdListaId(AIdListaId node)
    {
        defaultOut(node);
    }

    public void caseAIdListaId(AIdListaId node)
    {
        inAIdListaId(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAIdListaId(node);
    }
    public void inAListaInicializacaoListaInicializacao(AListaInicializacaoListaInicializacao node)
    {
        defaultIn(node);
    }

    public void outAListaInicializacaoListaInicializacao(AListaInicializacaoListaInicializacao node)
    {
        defaultOut(node);
    }

    public void caseAListaInicializacaoListaInicializacao(AListaInicializacaoListaInicializacao node)
    {
        inAListaInicializacaoListaInicializacao(node);
        if(node.getListaInicializacao() != null)
        {
            node.getListaInicializacao().apply(this);
        }
        if(node.getVirgula() != null)
        {
            node.getVirgula().apply(this);
        }
        if(node.getInicializacao() != null)
        {
            node.getInicializacao().apply(this);
        }
        outAListaInicializacaoListaInicializacao(node);
    }
    public void inAInicializacaoListaInicializacao(AInicializacaoListaInicializacao node)
    {
        defaultIn(node);
    }

    public void outAInicializacaoListaInicializacao(AInicializacaoListaInicializacao node)
    {
        defaultOut(node);
    }

    public void caseAInicializacaoListaInicializacao(AInicializacaoListaInicializacao node)
    {
        inAInicializacaoListaInicializacao(node);
        if(node.getInicializacao() != null)
        {
            node.getInicializacao().apply(this);
        }
        outAInicializacaoListaInicializacao(node);
    }
    public void inAClasseTipo(AClasseTipo node)
    {
        defaultIn(node);
    }

    public void outAClasseTipo(AClasseTipo node)
    {
        defaultOut(node);
    }

    public void caseAClasseTipo(AClasseTipo node)
    {
        inAClasseTipo(node);
        if(node.getTipoClasse() != null)
        {
            node.getTipoClasse().apply(this);
        }
        outAClasseTipo(node);
    }
    public void inAPrimitivoTipo(APrimitivoTipo node)
    {
        defaultIn(node);
    }

    public void outAPrimitivoTipo(APrimitivoTipo node)
    {
        defaultOut(node);
    }

    public void caseAPrimitivoTipo(APrimitivoTipo node)
    {
        inAPrimitivoTipo(node);
        if(node.getTipoPrimitivo() != null)
        {
            node.getTipoPrimitivo().apply(this);
        }
        outAPrimitivoTipo(node);
    }
    public void inAIntTipoPrimitivo(AIntTipoPrimitivo node)
    {
        defaultIn(node);
    }

    public void outAIntTipoPrimitivo(AIntTipoPrimitivo node)
    {
        defaultOut(node);
    }

    public void caseAIntTipoPrimitivo(AIntTipoPrimitivo node)
    {
        inAIntTipoPrimitivo(node);
        if(node.getInt() != null)
        {
            node.getInt().apply(this);
        }
        outAIntTipoPrimitivo(node);
    }
    public void inABoolTipoPrimitivo(ABoolTipoPrimitivo node)
    {
        defaultIn(node);
    }

    public void outABoolTipoPrimitivo(ABoolTipoPrimitivo node)
    {
        defaultOut(node);
    }

    public void caseABoolTipoPrimitivo(ABoolTipoPrimitivo node)
    {
        inABoolTipoPrimitivo(node);
        if(node.getBool() != null)
        {
            node.getBool().apply(this);
        }
        outABoolTipoPrimitivo(node);
    }
    public void inARealTipoPrimitivo(ARealTipoPrimitivo node)
    {
        defaultIn(node);
    }

    public void outARealTipoPrimitivo(ARealTipoPrimitivo node)
    {
        defaultOut(node);
    }

    public void caseARealTipoPrimitivo(ARealTipoPrimitivo node)
    {
        inARealTipoPrimitivo(node);
        if(node.getReal() != null)
        {
            node.getReal().apply(this);
        }
        outARealTipoPrimitivo(node);
    }
    public void inATipoClasse(ATipoClasse node)
    {
        defaultIn(node);
    }

    public void outATipoClasse(ATipoClasse node)
    {
        defaultOut(node);
    }

    public void caseATipoClasse(ATipoClasse node)
    {
        inATipoClasse(node);
        if(node.getCid() != null)
        {
            node.getCid().apply(this);
        }
        outATipoClasse(node);
    }
    public void inAProcDec2(AProcDec2 node)
    {
        defaultIn(node);
    }

    public void outAProcDec2(AProcDec2 node)
    {
        defaultOut(node);
    }

    public void caseAProcDec2(AProcDec2 node)
    {
        inAProcDec2(node);
        if(node.getDecProcedimento() != null)
        {
            node.getDecProcedimento().apply(this);
        }
        outAProcDec2(node);
    }
    public void inAFuncDec2(AFuncDec2 node)
    {
        defaultIn(node);
    }

    public void outAFuncDec2(AFuncDec2 node)
    {
        defaultOut(node);
    }

    public void caseAFuncDec2(AFuncDec2 node)
    {
        inAFuncDec2(node);
        if(node.getDecFuncao() != null)
        {
            node.getDecFuncao().apply(this);
        }
        outAFuncDec2(node);
    }
    public void inADecProcedimento(ADecProcedimento node)
    {
        defaultIn(node);
    }

    public void outADecProcedimento(ADecProcedimento node)
    {
        defaultOut(node);
    }

    public void caseADecProcedimento(ADecProcedimento node)
    {
        inADecProcedimento(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getParametros() != null)
        {
            node.getParametros().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getProcedimento() != null)
        {
            node.getProcedimento().apply(this);
        }
        if(node.getPontoDeEntrada() != null)
        {
            node.getPontoDeEntrada().apply(this);
        }
        outADecProcedimento(node);
    }
    public void inADecFuncao(ADecFuncao node)
    {
        defaultIn(node);
    }

    public void outADecFuncao(ADecFuncao node)
    {
        defaultOut(node);
    }

    public void caseADecFuncao(ADecFuncao node)
    {
        inADecFuncao(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getParametros() != null)
        {
            node.getParametros().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getFuncao() != null)
        {
            node.getFuncao().apply(this);
        }
        outADecFuncao(node);
    }
    public void inAParametrosParametros(AParametrosParametros node)
    {
        defaultIn(node);
    }

    public void outAParametrosParametros(AParametrosParametros node)
    {
        defaultOut(node);
    }

    public void caseAParametrosParametros(AParametrosParametros node)
    {
        inAParametrosParametros(node);
        if(node.getListaParametro() != null)
        {
            node.getListaParametro().apply(this);
        }
        outAParametrosParametros(node);
    }
    public void inAVazioParametros(AVazioParametros node)
    {
        defaultIn(node);
    }

    public void outAVazioParametros(AVazioParametros node)
    {
        defaultOut(node);
    }

    public void caseAVazioParametros(AVazioParametros node)
    {
        inAVazioParametros(node);
        outAVazioParametros(node);
    }
    public void inAListaParametroListaParametro(AListaParametroListaParametro node)
    {
        defaultIn(node);
    }

    public void outAListaParametroListaParametro(AListaParametroListaParametro node)
    {
        defaultOut(node);
    }

    public void caseAListaParametroListaParametro(AListaParametroListaParametro node)
    {
        inAListaParametroListaParametro(node);
        if(node.getListaParametro() != null)
        {
            node.getListaParametro().apply(this);
        }
        if(node.getVirgula() != null)
        {
            node.getVirgula().apply(this);
        }
        if(node.getParametro() != null)
        {
            node.getParametro().apply(this);
        }
        outAListaParametroListaParametro(node);
    }
    public void inAParametroListaParametro(AParametroListaParametro node)
    {
        defaultIn(node);
    }

    public void outAParametroListaParametro(AParametroListaParametro node)
    {
        defaultOut(node);
    }

    public void caseAParametroListaParametro(AParametroListaParametro node)
    {
        inAParametroListaParametro(node);
        if(node.getParametro() != null)
        {
            node.getParametro().apply(this);
        }
        outAParametroListaParametro(node);
    }
    public void inAParametro(AParametro node)
    {
        defaultIn(node);
    }

    public void outAParametro(AParametro node)
    {
        defaultOut(node);
    }

    public void caseAParametro(AParametro node)
    {
        inAParametro(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        outAParametro(node);
    }
    public void inACondComando(ACondComando node)
    {
        defaultIn(node);
    }

    public void outACondComando(ACondComando node)
    {
        defaultOut(node);
    }

    public void caseACondComando(ACondComando node)
    {
        inACondComando(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getSe() != null)
        {
            node.getSe().apply(this);
        }
        outACondComando(node);
    }
    public void inALoopComando(ALoopComando node)
    {
        defaultIn(node);
    }

    public void outALoopComando(ALoopComando node)
    {
        defaultOut(node);
    }

    public void caseALoopComando(ALoopComando node)
    {
        inALoopComando(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getEnquanto() != null)
        {
            node.getEnquanto().apply(this);
        }
        outALoopComando(node);
    }
    public void inAAtribComando(AAtribComando node)
    {
        defaultIn(node);
    }

    public void outAAtribComando(AAtribComando node)
    {
        defaultOut(node);
    }

    public void caseAAtribComando(AAtribComando node)
    {
        inAAtribComando(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getAtribuicao() != null)
        {
            node.getAtribuicao().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAAtribComando(node);
    }
    public void inACallComando(ACallComando node)
    {
        defaultIn(node);
    }

    public void outACallComando(ACallComando node)
    {
        defaultOut(node);
    }

    public void caseACallComando(ACallComando node)
    {
        inACallComando(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getChamada() != null)
        {
            node.getChamada().apply(this);
        }
        outACallComando(node);
    }
    public void inACallIdComando(ACallIdComando node)
    {
        defaultIn(node);
    }

    public void outACallIdComando(ACallIdComando node)
    {
        defaultOut(node);
    }

    public void caseACallIdComando(ACallIdComando node)
    {
        inACallIdComando(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getChamada() != null)
        {
            node.getChamada().apply(this);
        }
        if(node.getPonto() != null)
        {
            node.getPonto().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outACallIdComando(node);
    }
    public void inABlocoComando(ABlocoComando node)
    {
        defaultIn(node);
    }

    public void outABlocoComando(ABlocoComando node)
    {
        defaultOut(node);
    }

    public void caseABlocoComando(ABlocoComando node)
    {
        inABlocoComando(node);
        if(node.getBloco() != null)
        {
            node.getBloco().apply(this);
        }
        outABlocoComando(node);
    }
    public void inACondComandoSenao(ACondComandoSenao node)
    {
        defaultIn(node);
    }

    public void outACondComandoSenao(ACondComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseACondComandoSenao(ACondComandoSenao node)
    {
        inACondComandoSenao(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getSe() != null)
        {
            node.getSe().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outACondComandoSenao(node);
    }
    public void inACondSenaoComandoSenao(ACondSenaoComandoSenao node)
    {
        defaultIn(node);
    }

    public void outACondSenaoComandoSenao(ACondSenaoComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseACondSenaoComandoSenao(ACondSenaoComandoSenao node)
    {
        inACondSenaoComandoSenao(node);
        if(node.getComandoSenao() != null)
        {
            node.getComandoSenao().apply(this);
        }
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getSe() != null)
        {
            node.getSe().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outACondSenaoComandoSenao(node);
    }
    public void inALoopComandoSenao(ALoopComandoSenao node)
    {
        defaultIn(node);
    }

    public void outALoopComandoSenao(ALoopComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseALoopComandoSenao(ALoopComandoSenao node)
    {
        inALoopComandoSenao(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getEnquanto() != null)
        {
            node.getEnquanto().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outALoopComandoSenao(node);
    }
    public void inAAtribComandoSenao(AAtribComandoSenao node)
    {
        defaultIn(node);
    }

    public void outAAtribComandoSenao(AAtribComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseAAtribComandoSenao(AAtribComandoSenao node)
    {
        inAAtribComandoSenao(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getAtribuicao() != null)
        {
            node.getAtribuicao().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outAAtribComandoSenao(node);
    }
    public void inACallComandoSenao(ACallComandoSenao node)
    {
        defaultIn(node);
    }

    public void outACallComandoSenao(ACallComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseACallComandoSenao(ACallComandoSenao node)
    {
        inACallComandoSenao(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getChamada() != null)
        {
            node.getChamada().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outACallComandoSenao(node);
    }
    public void inACallIdComandoSenao(ACallIdComandoSenao node)
    {
        defaultIn(node);
    }

    public void outACallIdComandoSenao(ACallIdComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseACallIdComandoSenao(ACallIdComandoSenao node)
    {
        inACallIdComandoSenao(node);
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        if(node.getChamada() != null)
        {
            node.getChamada().apply(this);
        }
        if(node.getPonto() != null)
        {
            node.getPonto().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outACallIdComandoSenao(node);
    }
    public void inABlocoComandoSenao(ABlocoComandoSenao node)
    {
        defaultIn(node);
    }

    public void outABlocoComandoSenao(ABlocoComandoSenao node)
    {
        defaultOut(node);
    }

    public void caseABlocoComandoSenao(ABlocoComandoSenao node)
    {
        inABlocoComandoSenao(node);
        if(node.getBloco() != null)
        {
            node.getBloco().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        outABlocoComandoSenao(node);
    }
    public void inABloco(ABloco node)
    {
        defaultIn(node);
    }

    public void outABloco(ABloco node)
    {
        defaultOut(node);
    }

    public void caseABloco(ABloco node)
    {
        inABloco(node);
        if(node.getTermina() != null)
        {
            node.getTermina().apply(this);
        }
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        if(node.getDec() != null)
        {
            node.getDec().apply(this);
        }
        if(node.getComeca() != null)
        {
            node.getComeca().apply(this);
        }
        outABloco(node);
    }
    public void inACondExp(ACondExp node)
    {
        defaultIn(node);
    }

    public void outACondExp(ACondExp node)
    {
        defaultOut(node);
    }

    public void caseACondExp(ACondExp node)
    {
        inACondExp(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getEntao() != null)
        {
            node.getEntao().apply(this);
        }
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getSe() != null)
        {
            node.getSe().apply(this);
        }
        outACondExp(node);
    }
    public void inASomaExp(ASomaExp node)
    {
        defaultIn(node);
    }

    public void outASomaExp(ASomaExp node)
    {
        defaultOut(node);
    }

    public void caseASomaExp(ASomaExp node)
    {
        inASomaExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getAdicao() != null)
        {
            node.getAdicao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outASomaExp(node);
    }
    public void inASubtExp(ASubtExp node)
    {
        defaultIn(node);
    }

    public void outASubtExp(ASubtExp node)
    {
        defaultOut(node);
    }

    public void caseASubtExp(ASubtExp node)
    {
        inASubtExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getSubtracao() != null)
        {
            node.getSubtracao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outASubtExp(node);
    }
    public void inAMultiExp(AMultiExp node)
    {
        defaultIn(node);
    }

    public void outAMultiExp(AMultiExp node)
    {
        defaultOut(node);
    }

    public void caseAMultiExp(AMultiExp node)
    {
        inAMultiExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getMultiplicacao() != null)
        {
            node.getMultiplicacao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAMultiExp(node);
    }
    public void inADivExp(ADivExp node)
    {
        defaultIn(node);
    }

    public void outADivExp(ADivExp node)
    {
        defaultOut(node);
    }

    public void caseADivExp(ADivExp node)
    {
        inADivExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getDivisao() != null)
        {
            node.getDivisao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outADivExp(node);
    }
    public void inAModExp(AModExp node)
    {
        defaultIn(node);
    }

    public void outAModExp(AModExp node)
    {
        defaultOut(node);
    }

    public void caseAModExp(AModExp node)
    {
        inAModExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getModulo() != null)
        {
            node.getModulo().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAModExp(node);
    }
    public void inAIgualExp(AIgualExp node)
    {
        defaultIn(node);
    }

    public void outAIgualExp(AIgualExp node)
    {
        defaultOut(node);
    }

    public void caseAIgualExp(AIgualExp node)
    {
        inAIgualExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getIgualdade() != null)
        {
            node.getIgualdade().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAIgualExp(node);
    }
    public void inAMenorExp(AMenorExp node)
    {
        defaultIn(node);
    }

    public void outAMenorExp(AMenorExp node)
    {
        defaultOut(node);
    }

    public void caseAMenorExp(AMenorExp node)
    {
        inAMenorExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getMenorQue() != null)
        {
            node.getMenorQue().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAMenorExp(node);
    }
    public void inADifExp(ADifExp node)
    {
        defaultIn(node);
    }

    public void outADifExp(ADifExp node)
    {
        defaultOut(node);
    }

    public void caseADifExp(ADifExp node)
    {
        inADifExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getNegacao() != null)
        {
            node.getNegacao().apply(this);
        }
        outADifExp(node);
    }
    public void inAAndExp(AAndExp node)
    {
        defaultIn(node);
    }

    public void outAAndExp(AAndExp node)
    {
        defaultOut(node);
    }

    public void caseAAndExp(AAndExp node)
    {
        inAAndExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getE() != null)
        {
            node.getE().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAAndExp(node);
    }
    public void inAOrExp(AOrExp node)
    {
        defaultIn(node);
    }

    public void outAOrExp(AOrExp node)
    {
        defaultOut(node);
    }

    public void caseAOrExp(AOrExp node)
    {
        inAOrExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getOu() != null)
        {
            node.getOu().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAOrExp(node);
    }
    public void inABlocoExpExp(ABlocoExpExp node)
    {
        defaultIn(node);
    }

    public void outABlocoExpExp(ABlocoExpExp node)
    {
        defaultOut(node);
    }

    public void caseABlocoExpExp(ABlocoExpExp node)
    {
        inABlocoExpExp(node);
        if(node.getBlocoExp() != null)
        {
            node.getBlocoExp().apply(this);
        }
        outABlocoExpExp(node);
    }
    public void inATermoExp(ATermoExp node)
    {
        defaultIn(node);
    }

    public void outATermoExp(ATermoExp node)
    {
        defaultOut(node);
    }

    public void caseATermoExp(ATermoExp node)
    {
        inATermoExp(node);
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outATermoExp(node);
    }
    public void inASomaCondExp2(ASomaCondExp2 node)
    {
        defaultIn(node);
    }

    public void outASomaCondExp2(ASomaCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseASomaCondExp2(ASomaCondExp2 node)
    {
        inASomaCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getAdicao() != null)
        {
            node.getAdicao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outASomaCondExp2(node);
    }
    public void inASubtCondExp2(ASubtCondExp2 node)
    {
        defaultIn(node);
    }

    public void outASubtCondExp2(ASubtCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseASubtCondExp2(ASubtCondExp2 node)
    {
        inASubtCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getSubtracao() != null)
        {
            node.getSubtracao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outASubtCondExp2(node);
    }
    public void inAMultiCondExp2(AMultiCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAMultiCondExp2(AMultiCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAMultiCondExp2(AMultiCondExp2 node)
    {
        inAMultiCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getMultiplicacao() != null)
        {
            node.getMultiplicacao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAMultiCondExp2(node);
    }
    public void inADivCondExp2(ADivCondExp2 node)
    {
        defaultIn(node);
    }

    public void outADivCondExp2(ADivCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseADivCondExp2(ADivCondExp2 node)
    {
        inADivCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getDivisao() != null)
        {
            node.getDivisao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outADivCondExp2(node);
    }
    public void inAModCondExp2(AModCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAModCondExp2(AModCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAModCondExp2(AModCondExp2 node)
    {
        inAModCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getModulo() != null)
        {
            node.getModulo().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAModCondExp2(node);
    }
    public void inAIgualCondExp2(AIgualCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAIgualCondExp2(AIgualCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAIgualCondExp2(AIgualCondExp2 node)
    {
        inAIgualCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getIgualdade() != null)
        {
            node.getIgualdade().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAIgualCondExp2(node);
    }
    public void inAMenorCondExp2(AMenorCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAMenorCondExp2(AMenorCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAMenorCondExp2(AMenorCondExp2 node)
    {
        inAMenorCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getMenorQue() != null)
        {
            node.getMenorQue().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAMenorCondExp2(node);
    }
    public void inADifCondExp2(ADifCondExp2 node)
    {
        defaultIn(node);
    }

    public void outADifCondExp2(ADifCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseADifCondExp2(ADifCondExp2 node)
    {
        inADifCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getNegacao() != null)
        {
            node.getNegacao().apply(this);
        }
        outADifCondExp2(node);
    }
    public void inAAndCondExp2(AAndCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAAndCondExp2(AAndCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAAndCondExp2(AAndCondExp2 node)
    {
        inAAndCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getE() != null)
        {
            node.getE().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAAndCondExp2(node);
    }
    public void inAOrCondExp2(AOrCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAOrCondExp2(AOrCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAOrCondExp2(AOrCondExp2 node)
    {
        inAOrCondExp2(node);
        if(node.getCondExp2() != null)
        {
            node.getCondExp2().apply(this);
        }
        if(node.getOu() != null)
        {
            node.getOu().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAOrCondExp2(node);
    }
    public void inAFimCondExp2(AFimCondExp2 node)
    {
        defaultIn(node);
    }

    public void outAFimCondExp2(AFimCondExp2 node)
    {
        defaultOut(node);
    }

    public void caseAFimCondExp2(AFimCondExp2 node)
    {
        inAFimCondExp2(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getSenao() != null)
        {
            node.getSenao().apply(this);
        }
        if(node.getTermo() != null)
        {
            node.getTermo().apply(this);
        }
        outAFimCondExp2(node);
    }
    public void inAInteiroTermo(AInteiroTermo node)
    {
        defaultIn(node);
    }

    public void outAInteiroTermo(AInteiroTermo node)
    {
        defaultOut(node);
    }

    public void caseAInteiroTermo(AInteiroTermo node)
    {
        inAInteiroTermo(node);
        if(node.getNumeroInteiro() != null)
        {
            node.getNumeroInteiro().apply(this);
        }
        outAInteiroTermo(node);
    }
    public void inARealTermo(ARealTermo node)
    {
        defaultIn(node);
    }

    public void outARealTermo(ARealTermo node)
    {
        defaultOut(node);
    }

    public void caseARealTermo(ARealTermo node)
    {
        inARealTermo(node);
        if(node.getNumeroReal() != null)
        {
            node.getNumeroReal().apply(this);
        }
        outARealTermo(node);
    }
    public void inATrueTermo(ATrueTermo node)
    {
        defaultIn(node);
    }

    public void outATrueTermo(ATrueTermo node)
    {
        defaultOut(node);
    }

    public void caseATrueTermo(ATrueTermo node)
    {
        inATrueTermo(node);
        if(node.getTrue() != null)
        {
            node.getTrue().apply(this);
        }
        outATrueTermo(node);
    }
    public void inAFalseTermo(AFalseTermo node)
    {
        defaultIn(node);
    }

    public void outAFalseTermo(AFalseTermo node)
    {
        defaultOut(node);
    }

    public void caseAFalseTermo(AFalseTermo node)
    {
        inAFalseTermo(node);
        if(node.getFalse() != null)
        {
            node.getFalse().apply(this);
        }
        outAFalseTermo(node);
    }
    public void inAIdTermo(AIdTermo node)
    {
        defaultIn(node);
    }

    public void outAIdTermo(AIdTermo node)
    {
        defaultOut(node);
    }

    public void caseAIdTermo(AIdTermo node)
    {
        inAIdTermo(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAIdTermo(node);
    }
    public void inAParTermo(AParTermo node)
    {
        defaultIn(node);
    }

    public void outAParTermo(AParTermo node)
    {
        defaultOut(node);
    }

    public void caseAParTermo(AParTermo node)
    {
        inAParTermo(node);
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        outAParTermo(node);
    }
    public void inABlocoExp(ABlocoExp node)
    {
        defaultIn(node);
    }

    public void outABlocoExp(ABlocoExp node)
    {
        defaultOut(node);
    }

    public void caseABlocoExp(ABlocoExp node)
    {
        inABlocoExp(node);
        if(node.getTermina() != null)
        {
            node.getTermina().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getListaDecCons() != null)
        {
            node.getListaDecCons().apply(this);
        }
        if(node.getComeca() != null)
        {
            node.getComeca().apply(this);
        }
        outABlocoExp(node);
    }
    public void inAListaDecConsListaDecCons(AListaDecConsListaDecCons node)
    {
        defaultIn(node);
    }

    public void outAListaDecConsListaDecCons(AListaDecConsListaDecCons node)
    {
        defaultOut(node);
    }

    public void caseAListaDecConsListaDecCons(AListaDecConsListaDecCons node)
    {
        inAListaDecConsListaDecCons(node);
        if(node.getListaDecCons() != null)
        {
            node.getListaDecCons().apply(this);
        }
        if(node.getDecCons() != null)
        {
            node.getDecCons().apply(this);
        }
        outAListaDecConsListaDecCons(node);
    }
    public void inADecConsListaDecCons(ADecConsListaDecCons node)
    {
        defaultIn(node);
    }

    public void outADecConsListaDecCons(ADecConsListaDecCons node)
    {
        defaultOut(node);
    }

    public void caseADecConsListaDecCons(ADecConsListaDecCons node)
    {
        inADecConsListaDecCons(node);
        if(node.getDecCons() != null)
        {
            node.getDecCons().apply(this);
        }
        outADecConsListaDecCons(node);
    }
    public void inAChamada(AChamada node)
    {
        defaultIn(node);
    }

    public void outAChamada(AChamada node)
    {
        defaultOut(node);
    }

    public void caseAChamada(AChamada node)
    {
        inAChamada(node);
        if(node.getParentesesDireito() != null)
        {
            node.getParentesesDireito().apply(this);
        }
        if(node.getListaExp() != null)
        {
            node.getListaExp().apply(this);
        }
        if(node.getParentesesEsquerdo() != null)
        {
            node.getParentesesEsquerdo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAChamada(node);
    }
    public void inAListaExpListaExp(AListaExpListaExp node)
    {
        defaultIn(node);
    }

    public void outAListaExpListaExp(AListaExpListaExp node)
    {
        defaultOut(node);
    }

    public void caseAListaExpListaExp(AListaExpListaExp node)
    {
        inAListaExpListaExp(node);
        if(node.getListaExp() != null)
        {
            node.getListaExp().apply(this);
        }
        if(node.getVirgula() != null)
        {
            node.getVirgula().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        outAListaExpListaExp(node);
    }
    public void inAExpListaExp(AExpListaExp node)
    {
        defaultIn(node);
    }

    public void outAExpListaExp(AExpListaExp node)
    {
        defaultOut(node);
    }

    public void caseAExpListaExp(AExpListaExp node)
    {
        inAExpListaExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        outAExpListaExp(node);
    }
    public void inAVazioListaExp(AVazioListaExp node)
    {
        defaultIn(node);
    }

    public void outAVazioListaExp(AVazioListaExp node)
    {
        defaultOut(node);
    }

    public void caseAVazioListaExp(AVazioListaExp node)
    {
        inAVazioListaExp(node);
        outAVazioListaExp(node);
    }
    public void inAVazioAtributo(AVazioAtributo node)
    {
        defaultIn(node);
    }

    public void outAVazioAtributo(AVazioAtributo node)
    {
        defaultOut(node);
    }

    public void caseAVazioAtributo(AVazioAtributo node)
    {
        inAVazioAtributo(node);
        outAVazioAtributo(node);
    }
}
