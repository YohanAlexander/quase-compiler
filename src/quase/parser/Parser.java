/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.parser;

import quase.lexer.*;
import quase.node.*;
import quase.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APrograma$Familia1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce APrograma$Vazio1Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AListaClasseListaClasse */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AClasseListaClasse */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce AListaRelacaoListaRelacao */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce ARelacaoListaRelacao */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce ARelacaoRelacao */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce AFilhaRelacaoFilhaRelacao */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list);
            }
            break;
            case 8: /* reduce ADefClasseDefClasse */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list);
            }
            break;
            case 9: /* reduce AAtributosAtributos */
            {
                ArrayList<Object> list = new9();
                push(goTo(6), list);
            }
            break;
            case 10: /* reduce AVazioAtributos */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list);
            }
            break;
            case 11: /* reduce AMetodosMetodos */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list);
            }
            break;
            case 12: /* reduce AVazioMetodos */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list);
            }
            break;
            case 13: /* reduce AObjDec */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list);
            }
            break;
            case 14: /* reduce AVarDec */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list);
            }
            break;
            case 15: /* reduce AConsDec */
            {
                ArrayList<Object> list = new15();
                push(goTo(8), list);
            }
            break;
            case 16: /* reduce AListaDecListaDecs */
            {
                ArrayList<Object> list = new16();
                push(goTo(9), list);
            }
            break;
            case 17: /* reduce AVazioListaDecs */
            {
                ArrayList<Object> list = new17();
                push(goTo(9), list);
            }
            break;
            case 18: /* reduce ADecObjDecObj */
            {
                ArrayList<Object> list = new18();
                push(goTo(10), list);
            }
            break;
            case 19: /* reduce ADecVarDecVar */
            {
                ArrayList<Object> list = new19();
                push(goTo(11), list);
            }
            break;
            case 20: /* reduce ADecConsDecCons */
            {
                ArrayList<Object> list = new20();
                push(goTo(12), list);
            }
            break;
            case 21: /* reduce AInicializacaoInicializacao */
            {
                ArrayList<Object> list = new21();
                push(goTo(13), list);
            }
            break;
            case 22: /* reduce AListaIdListaId */
            {
                ArrayList<Object> list = new22();
                push(goTo(14), list);
            }
            break;
            case 23: /* reduce AIdListaId */
            {
                ArrayList<Object> list = new23();
                push(goTo(14), list);
            }
            break;
            case 24: /* reduce AListaInicializacaoListaInicializacao */
            {
                ArrayList<Object> list = new24();
                push(goTo(15), list);
            }
            break;
            case 25: /* reduce AInicializacaoListaInicializacao */
            {
                ArrayList<Object> list = new25();
                push(goTo(15), list);
            }
            break;
            case 26: /* reduce AClasseTipo */
            {
                ArrayList<Object> list = new26();
                push(goTo(16), list);
            }
            break;
            case 27: /* reduce APrimitivoTipo */
            {
                ArrayList<Object> list = new27();
                push(goTo(16), list);
            }
            break;
            case 28: /* reduce AIntTipoPrimitivo */
            {
                ArrayList<Object> list = new28();
                push(goTo(17), list);
            }
            break;
            case 29: /* reduce ABoolTipoPrimitivo */
            {
                ArrayList<Object> list = new29();
                push(goTo(17), list);
            }
            break;
            case 30: /* reduce ARealTipoPrimitivo */
            {
                ArrayList<Object> list = new30();
                push(goTo(17), list);
            }
            break;
            case 31: /* reduce ATipoClasseTipoClasse */
            {
                ArrayList<Object> list = new31();
                push(goTo(18), list);
            }
            break;
            case 32: /* reduce AProcDec2 */
            {
                ArrayList<Object> list = new32();
                push(goTo(19), list);
            }
            break;
            case 33: /* reduce AFuncDec2 */
            {
                ArrayList<Object> list = new33();
                push(goTo(19), list);
            }
            break;
            case 34: /* reduce AAdecprocedimentodecprocedimento1DecProcedimento */
            {
                ArrayList<Object> list = new34();
                push(goTo(20), list);
            }
            break;
            case 35: /* reduce AAdecprocedimentodecprocedimento2DecProcedimento */
            {
                ArrayList<Object> list = new35();
                push(goTo(20), list);
            }
            break;
            case 36: /* reduce ADecFuncaoDecFuncao */
            {
                ArrayList<Object> list = new36();
                push(goTo(21), list);
            }
            break;
            case 37: /* reduce AParametrosParametros */
            {
                ArrayList<Object> list = new37();
                push(goTo(22), list);
            }
            break;
            case 38: /* reduce AVazioParametros */
            {
                ArrayList<Object> list = new38();
                push(goTo(22), list);
            }
            break;
            case 39: /* reduce AListaParametroListaParametro */
            {
                ArrayList<Object> list = new39();
                push(goTo(23), list);
            }
            break;
            case 40: /* reduce AParametroListaParametro */
            {
                ArrayList<Object> list = new40();
                push(goTo(23), list);
            }
            break;
            case 41: /* reduce AParametroParametro */
            {
                ArrayList<Object> list = new41();
                push(goTo(24), list);
            }
            break;
            case 42: /* reduce ACondComando */
            {
                ArrayList<Object> list = new42();
                push(goTo(25), list);
            }
            break;
            case 43: /* reduce ACondElseComando */
            {
                ArrayList<Object> list = new43();
                push(goTo(25), list);
            }
            break;
            case 44: /* reduce ALoopComando */
            {
                ArrayList<Object> list = new44();
                push(goTo(25), list);
            }
            break;
            case 45: /* reduce AAtribComando */
            {
                ArrayList<Object> list = new45();
                push(goTo(25), list);
            }
            break;
            case 46: /* reduce AAcallcomando1Comando */
            {
                ArrayList<Object> list = new46();
                push(goTo(25), list);
            }
            break;
            case 47: /* reduce AAcallcomando2Comando */
            {
                ArrayList<Object> list = new47();
                push(goTo(25), list);
            }
            break;
            case 48: /* reduce ABlocoComando */
            {
                ArrayList<Object> list = new48();
                push(goTo(25), list);
            }
            break;
            case 49: /* reduce ACondComandoElse */
            {
                ArrayList<Object> list = new49();
                push(goTo(26), list);
            }
            break;
            case 50: /* reduce ALoopComandoElse */
            {
                ArrayList<Object> list = new50();
                push(goTo(26), list);
            }
            break;
            case 51: /* reduce AAtribComandoElse */
            {
                ArrayList<Object> list = new51();
                push(goTo(26), list);
            }
            break;
            case 52: /* reduce AAcallcomandoelse1ComandoElse */
            {
                ArrayList<Object> list = new52();
                push(goTo(26), list);
            }
            break;
            case 53: /* reduce AAcallcomandoelse2ComandoElse */
            {
                ArrayList<Object> list = new53();
                push(goTo(26), list);
            }
            break;
            case 54: /* reduce ABlocoComandoElse */
            {
                ArrayList<Object> list = new54();
                push(goTo(26), list);
            }
            break;
            case 55: /* reduce AContCondContComandoElse */
            {
                ArrayList<Object> list = new55();
                push(goTo(27), list);
            }
            break;
            case 56: /* reduce AListaComandosListaComandos */
            {
                ArrayList<Object> list = new56();
                push(goTo(28), list);
            }
            break;
            case 57: /* reduce AVazioListaComandos */
            {
                ArrayList<Object> list = new57();
                push(goTo(28), list);
            }
            break;
            case 58: /* reduce ABlocoBloco */
            {
                ArrayList<Object> list = new58();
                push(goTo(29), list);
            }
            break;
            case 59: /* reduce ACondExp */
            {
                ArrayList<Object> list = new59();
                push(goTo(30), list);
            }
            break;
            case 60: /* reduce ANegativoExp */
            {
                ArrayList<Object> list = new60();
                push(goTo(30), list);
            }
            break;
            case 61: /* reduce ASomaExp */
            {
                ArrayList<Object> list = new61();
                push(goTo(30), list);
            }
            break;
            case 62: /* reduce ASubtExp */
            {
                ArrayList<Object> list = new62();
                push(goTo(30), list);
            }
            break;
            case 63: /* reduce AMultiExp */
            {
                ArrayList<Object> list = new63();
                push(goTo(30), list);
            }
            break;
            case 64: /* reduce ADivExp */
            {
                ArrayList<Object> list = new64();
                push(goTo(30), list);
            }
            break;
            case 65: /* reduce AModExp */
            {
                ArrayList<Object> list = new65();
                push(goTo(30), list);
            }
            break;
            case 66: /* reduce AIgualExp */
            {
                ArrayList<Object> list = new66();
                push(goTo(30), list);
            }
            break;
            case 67: /* reduce AMenorExp */
            {
                ArrayList<Object> list = new67();
                push(goTo(30), list);
            }
            break;
            case 68: /* reduce ADifExp */
            {
                ArrayList<Object> list = new68();
                push(goTo(30), list);
            }
            break;
            case 69: /* reduce AAndExp */
            {
                ArrayList<Object> list = new69();
                push(goTo(30), list);
            }
            break;
            case 70: /* reduce AOrExp */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list);
            }
            break;
            case 71: /* reduce ABlocoExpExp */
            {
                ArrayList<Object> list = new71();
                push(goTo(30), list);
            }
            break;
            case 72: /* reduce ATermoExp */
            {
                ArrayList<Object> list = new72();
                push(goTo(30), list);
            }
            break;
            case 73: /* reduce AContCondCondExp2 */
            {
                ArrayList<Object> list = new73();
                push(goTo(31), list);
            }
            break;
            case 74: /* reduce AFimCondCondExp3 */
            {
                ArrayList<Object> list = new74();
                push(goTo(32), list);
            }
            break;
            case 75: /* reduce AInteiroTermo */
            {
                ArrayList<Object> list = new75();
                push(goTo(33), list);
            }
            break;
            case 76: /* reduce ARealTermo */
            {
                ArrayList<Object> list = new76();
                push(goTo(33), list);
            }
            break;
            case 77: /* reduce ATrueTermo */
            {
                ArrayList<Object> list = new77();
                push(goTo(33), list);
            }
            break;
            case 78: /* reduce AFalseTermo */
            {
                ArrayList<Object> list = new78();
                push(goTo(33), list);
            }
            break;
            case 79: /* reduce AIdCallTermo */
            {
                ArrayList<Object> list = new79();
                push(goTo(33), list);
            }
            break;
            case 80: /* reduce AParTermo */
            {
                ArrayList<Object> list = new80();
                push(goTo(33), list);
            }
            break;
            case 81: /* reduce AIdIdCall */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list);
            }
            break;
            case 82: /* reduce AAcallidcall1IdCall */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list);
            }
            break;
            case 83: /* reduce AAcallidcall2IdCall */
            {
                ArrayList<Object> list = new83();
                push(goTo(34), list);
            }
            break;
            case 84: /* reduce AAatribidcall1IdCall */
            {
                ArrayList<Object> list = new84();
                push(goTo(34), list);
            }
            break;
            case 85: /* reduce AAatribidcall2IdCall */
            {
                ArrayList<Object> list = new85();
                push(goTo(34), list);
            }
            break;
            case 86: /* reduce AIdPontoIdPonto */
            {
                ArrayList<Object> list = new86();
                push(goTo(35), list);
            }
            break;
            case 87: /* reduce ABlocoExpBlocoExp */
            {
                ArrayList<Object> list = new87();
                push(goTo(36), list);
            }
            break;
            case 88: /* reduce AListaDecConsListaDecCons */
            {
                ArrayList<Object> list = new88();
                push(goTo(37), list);
            }
            break;
            case 89: /* reduce AVazioListaDecCons */
            {
                ArrayList<Object> list = new89();
                push(goTo(37), list);
            }
            break;
            case 90: /* reduce AChamadaChamada */
            {
                ArrayList<Object> list = new90();
                push(goTo(38), list);
            }
            break;
            case 91: /* reduce AListaExpListaExp */
            {
                ArrayList<Object> list = new91();
                push(goTo(39), list);
            }
            break;
            case 92: /* reduce AExpListaExp */
            {
                ArrayList<Object> list = new92();
                push(goTo(39), list);
            }
            break;
            case 93: /* reduce AVazioListaExp */
            {
                ArrayList<Object> list = new93();
                push(goTo(39), list);
            }
            break;
            case 94: /* reduce AVazioAtributo */
            {
                ArrayList<Object> list = new94();
                push(goTo(40), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APrograma$Familia1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PFamilia pfamiliaNode2;
        PListaClasse plistaclasseNode5;
        {
            // Block
        PListaRelacao plistarelacaoNode3;
        TPontoVirgula tpontovirgulaNode4;
        plistarelacaoNode3 = (PListaRelacao)nodeArrayList1.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pfamiliaNode2 = new AFamiliaFamilia(plistarelacaoNode3, tpontovirgulaNode4);
        }
        plistaclasseNode5 = (PListaClasse)nodeArrayList3.get(0);

        pprogramaNode1 = new AProgramaPrograma(pfamiliaNode2, plistaclasseNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce APrograma$Vazio1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PFamilia pfamiliaNode2;
        PListaClasse plistaclasseNode3;
        {
            // Block

        pfamiliaNode2 = new AVazioFamilia();
        }
        plistaclasseNode3 = (PListaClasse)nodeArrayList1.get(0);

        pprogramaNode1 = new AProgramaPrograma(pfamiliaNode2, plistaclasseNode3);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AListaClasseListaClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaClasse plistaclasseNode1;
        {
            // Block
        PDefClasse pdefclasseNode2;
        PListaClasse plistaclasseNode3;
        pdefclasseNode2 = (PDefClasse)nodeArrayList1.get(0);
        plistaclasseNode3 = (PListaClasse)nodeArrayList2.get(0);

        plistaclasseNode1 = new AListaClasseListaClasse(pdefclasseNode2, plistaclasseNode3);
        }
	nodeList.add(plistaclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AClasseListaClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaClasse plistaclasseNode1;
        {
            // Block
        PDefClasse pdefclasseNode2;
        pdefclasseNode2 = (PDefClasse)nodeArrayList1.get(0);

        plistaclasseNode1 = new AClasseListaClasse(pdefclasseNode2);
        }
	nodeList.add(plistaclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AListaRelacaoListaRelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaRelacao plistarelacaoNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        TEComercial tecomercialNode3;
        PListaRelacao plistarelacaoNode4;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);
        tecomercialNode3 = (TEComercial)nodeArrayList2.get(0);
        plistarelacaoNode4 = (PListaRelacao)nodeArrayList3.get(0);

        plistarelacaoNode1 = new AListaRelacaoListaRelacao(prelacaoNode2, tecomercialNode3, plistarelacaoNode4);
        }
	nodeList.add(plistarelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ARelacaoListaRelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaRelacao plistarelacaoNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);

        plistarelacaoNode1 = new ARelacaoListaRelacao(prelacaoNode2);
        }
	nodeList.add(plistarelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ARelacaoRelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacao prelacaoNode1;
        {
            // Block
        TClasse tclasseNode2;
        TCid tcidNode3;
        PFilhaRelacao pfilharelacaoNode4;
        tclasseNode2 = (TClasse)nodeArrayList1.get(0);
        tcidNode3 = (TCid)nodeArrayList2.get(0);
        pfilharelacaoNode4 = (PFilhaRelacao)nodeArrayList3.get(0);

        prelacaoNode1 = new ARelacaoRelacao(tclasseNode2, tcidNode3, pfilharelacaoNode4);
        }
	nodeList.add(prelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AFilhaRelacaoFilhaRelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFilhaRelacao pfilharelacaoNode1;
        {
            // Block
        TFilhaDaClasse tfilhadaclasseNode2;
        TCid tcidNode3;
        tfilhadaclasseNode2 = (TFilhaDaClasse)nodeArrayList1.get(0);
        tcidNode3 = (TCid)nodeArrayList2.get(0);

        pfilharelacaoNode1 = new AFilhaRelacaoFilhaRelacao(tfilhadaclasseNode2, tcidNode3);
        }
	nodeList.add(pfilharelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ADefClasseDefClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefClasse pdefclasseNode1;
        {
            // Block
        TClasse tclasseNode2;
        TCid tcidNode3;
        TComeca tcomecaNode4;
        PAtributos patributosNode5;
        PMetodos pmetodosNode6;
        TTermina tterminaNode7;
        tclasseNode2 = (TClasse)nodeArrayList1.get(0);
        tcidNode3 = (TCid)nodeArrayList2.get(0);
        tcomecaNode4 = (TComeca)nodeArrayList3.get(0);
        patributosNode5 = (PAtributos)nodeArrayList4.get(0);
        pmetodosNode6 = (PMetodos)nodeArrayList5.get(0);
        tterminaNode7 = (TTermina)nodeArrayList6.get(0);

        pdefclasseNode1 = new ADefClasseDefClasse(tclasseNode2, tcidNode3, tcomecaNode4, patributosNode5, pmetodosNode6, tterminaNode7);
        }
	nodeList.add(pdefclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAtributosAtributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributos patributosNode1;
        {
            // Block
        PDec pdecNode2;
        PAtributos patributosNode3;
        pdecNode2 = (PDec)nodeArrayList1.get(0);
        patributosNode3 = (PAtributos)nodeArrayList2.get(0);

        patributosNode1 = new AAtributosAtributos(pdecNode2, patributosNode3);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AVazioAtributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAtributos patributosNode1;
        {
            // Block

        patributosNode1 = new AVazioAtributos();
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AMetodosMetodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMetodos pmetodosNode1;
        {
            // Block
        PDec2 pdec2Node2;
        PMetodos pmetodosNode3;
        pdec2Node2 = (PDec2)nodeArrayList1.get(0);
        pmetodosNode3 = (PMetodos)nodeArrayList2.get(0);

        pmetodosNode1 = new AMetodosMetodos(pdec2Node2, pmetodosNode3);
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AVazioMetodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PMetodos pmetodosNode1;
        {
            // Block

        pmetodosNode1 = new AVazioMetodos();
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AObjDec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDec pdecNode1;
        {
            // Block
        PDecObj pdecobjNode2;
        pdecobjNode2 = (PDecObj)nodeArrayList1.get(0);

        pdecNode1 = new AObjDec(pdecobjNode2);
        }
	nodeList.add(pdecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AVarDec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDec pdecNode1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        pdecNode1 = new AVarDec(pdecvarNode2);
        }
	nodeList.add(pdecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AConsDec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDec pdecNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);

        pdecNode1 = new AConsDec(pdecconsNode2);
        }
	nodeList.add(pdecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AListaDecListaDecs */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaDecs plistadecsNode1;
        {
            // Block
        PDec pdecNode2;
        PListaDecs plistadecsNode3;
        pdecNode2 = (PDec)nodeArrayList1.get(0);
        plistadecsNode3 = (PListaDecs)nodeArrayList2.get(0);

        plistadecsNode1 = new AListaDecListaDecs(pdecNode2, plistadecsNode3);
        }
	nodeList.add(plistadecsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AVazioListaDecs */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaDecs plistadecsNode1;
        {
            // Block

        plistadecsNode1 = new AVazioListaDecs();
        }
	nodeList.add(plistadecsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ADecObjDecObj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecObj pdecobjNode1;
        {
            // Block
        TObjeto tobjetoNode2;
        TCid tcidNode3;
        PListaId plistaidNode4;
        TPontoVirgula tpontovirgulaNode5;
        tobjetoNode2 = (TObjeto)nodeArrayList1.get(0);
        tcidNode3 = (TCid)nodeArrayList2.get(0);
        plistaidNode4 = (PListaId)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecobjNode1 = new ADecObjDecObj(tobjetoNode2, tcidNode3, plistaidNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecobjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ADecVarDecVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVar pdecvarNode1;
        {
            // Block
        TVariavel tvariavelNode2;
        PTipo ptipoNode3;
        PListaId plistaidNode4;
        TPontoVirgula tpontovirgulaNode5;
        tvariavelNode2 = (TVariavel)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        plistaidNode4 = (PListaId)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecvarNode1 = new ADecVarDecVar(tvariavelNode2, ptipoNode3, plistaidNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ADecConsDecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecCons pdecconsNode1;
        {
            // Block
        TConstante tconstanteNode2;
        PTipoPrimitivo ptipoprimitivoNode3;
        PListaInicializacao plistainicializacaoNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        ptipoprimitivoNode3 = (PTipoPrimitivo)nodeArrayList2.get(0);
        plistainicializacaoNode4 = (PListaInicializacao)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecconsNode1 = new ADecConsDecCons(tconstanteNode2, ptipoprimitivoNode3, plistainicializacaoNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AInicializacaoInicializacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInicializacao pinicializacaoNode1;
        {
            // Block
        TId tidNode2;
        TInicializacao tinicializacaoNode3;
        PExp pexpNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tinicializacaoNode3 = (TInicializacao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pinicializacaoNode1 = new AInicializacaoInicializacao(tidNode2, tinicializacaoNode3, pexpNode4);
        }
	nodeList.add(pinicializacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AListaIdListaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaId plistaidNode1;
        {
            // Block
        TId tidNode2;
        TVirgula tvirgulaNode3;
        PListaId plistaidNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        plistaidNode4 = (PListaId)nodeArrayList3.get(0);

        plistaidNode1 = new AListaIdListaId(tidNode2, tvirgulaNode3, plistaidNode4);
        }
	nodeList.add(plistaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AIdListaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaId plistaidNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        plistaidNode1 = new AIdListaId(tidNode2);
        }
	nodeList.add(plistaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AListaInicializacaoListaInicializacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaInicializacao plistainicializacaoNode1;
        {
            // Block
        PInicializacao pinicializacaoNode2;
        TVirgula tvirgulaNode3;
        PListaInicializacao plistainicializacaoNode4;
        pinicializacaoNode2 = (PInicializacao)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        plistainicializacaoNode4 = (PListaInicializacao)nodeArrayList3.get(0);

        plistainicializacaoNode1 = new AListaInicializacaoListaInicializacao(pinicializacaoNode2, tvirgulaNode3, plistainicializacaoNode4);
        }
	nodeList.add(plistainicializacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AInicializacaoListaInicializacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaInicializacao plistainicializacaoNode1;
        {
            // Block
        PInicializacao pinicializacaoNode2;
        pinicializacaoNode2 = (PInicializacao)nodeArrayList1.get(0);

        plistainicializacaoNode1 = new AInicializacaoListaInicializacao(pinicializacaoNode2);
        }
	nodeList.add(plistainicializacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AClasseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoClasse ptipoclasseNode2;
        ptipoclasseNode2 = (PTipoClasse)nodeArrayList1.get(0);

        ptipoNode1 = new AClasseTipo(ptipoclasseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce APrimitivoTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoPrimitivo ptipoprimitivoNode2;
        ptipoprimitivoNode2 = (PTipoPrimitivo)nodeArrayList1.get(0);

        ptipoNode1 = new APrimitivoTipo(ptipoprimitivoNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AIntTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TInt tintNode2;
        tintNode2 = (TInt)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new AIntTipoPrimitivo(tintNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ABoolTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TBool tboolNode2;
        tboolNode2 = (TBool)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ABoolTipoPrimitivo(tboolNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ARealTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ARealTipoPrimitivo(trealNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ATipoClasseTipoClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoClasse ptipoclasseNode1;
        {
            // Block
        TCid tcidNode2;
        tcidNode2 = (TCid)nodeArrayList1.get(0);

        ptipoclasseNode1 = new ATipoClasseTipoClasse(tcidNode2);
        }
	nodeList.add(ptipoclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AProcDec2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDec2 pdec2Node1;
        {
            // Block
        PDecProcedimento pdecprocedimentoNode2;
        pdecprocedimentoNode2 = (PDecProcedimento)nodeArrayList1.get(0);

        pdec2Node1 = new AProcDec2(pdecprocedimentoNode2);
        }
	nodeList.add(pdec2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AFuncDec2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDec2 pdec2Node1;
        {
            // Block
        PDecFuncao pdecfuncaoNode2;
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList1.get(0);

        pdec2Node1 = new AFuncDec2(pdecfuncaoNode2);
        }
	nodeList.add(pdec2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAdecprocedimentodecprocedimento1DecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TProcedimento tprocedimentoNode3;
        TId tidNode4;
        TParentesesEsquerdo tparentesesesquerdoNode5;
        PParametros pparametrosNode6;
        TParentesesDireito tparentesesdireitoNode7;
        PComando pcomandoNode8;
        tprocedimentoNode3 = (TProcedimento)nodeArrayList1.get(0);
        tidNode4 = (TId)nodeArrayList2.get(0);
        tparentesesesquerdoNode5 = (TParentesesEsquerdo)nodeArrayList3.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList4.get(0);
        tparentesesdireitoNode7 = (TParentesesDireito)nodeArrayList5.get(0);
        pcomandoNode8 = (PComando)nodeArrayList6.get(0);

        pdecprocedimentoNode1 = new ADecProcedimentoDecProcedimento(null, tprocedimentoNode3, tidNode4, tparentesesesquerdoNode5, pparametrosNode6, tparentesesdireitoNode7, pcomandoNode8);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAdecprocedimentodecprocedimento2DecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        TPontoDeEntrada tpontodeentradaNode2;
        TProcedimento tprocedimentoNode3;
        TId tidNode4;
        TParentesesEsquerdo tparentesesesquerdoNode5;
        PParametros pparametrosNode6;
        TParentesesDireito tparentesesdireitoNode7;
        PComando pcomandoNode8;
        tpontodeentradaNode2 = (TPontoDeEntrada)nodeArrayList1.get(0);
        tprocedimentoNode3 = (TProcedimento)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tparentesesesquerdoNode5 = (TParentesesEsquerdo)nodeArrayList4.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList5.get(0);
        tparentesesdireitoNode7 = (TParentesesDireito)nodeArrayList6.get(0);
        pcomandoNode8 = (PComando)nodeArrayList7.get(0);

        pdecprocedimentoNode1 = new ADecProcedimentoDecProcedimento(tpontodeentradaNode2, tprocedimentoNode3, tidNode4, tparentesesesquerdoNode5, pparametrosNode6, tparentesesdireitoNode7, pcomandoNode8);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ADecFuncaoDecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TFuncao tfuncaoNode2;
        PTipo ptipoNode3;
        TId tidNode4;
        TParentesesEsquerdo tparentesesesquerdoNode5;
        PParametros pparametrosNode6;
        TParentesesDireito tparentesesdireitoNode7;
        PExp pexpNode8;
        tfuncaoNode2 = (TFuncao)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tparentesesesquerdoNode5 = (TParentesesEsquerdo)nodeArrayList4.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList5.get(0);
        tparentesesdireitoNode7 = (TParentesesDireito)nodeArrayList6.get(0);
        pexpNode8 = (PExp)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new ADecFuncaoDecFuncao(tfuncaoNode2, ptipoNode3, tidNode4, tparentesesesquerdoNode5, pparametrosNode6, tparentesesdireitoNode7, pexpNode8);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AParametrosParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PListaParametro plistaparametroNode2;
        plistaparametroNode2 = (PListaParametro)nodeArrayList1.get(0);

        pparametrosNode1 = new AParametrosParametros(plistaparametroNode2);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AVazioParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block

        pparametrosNode1 = new AVazioParametros();
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AListaParametroListaParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaParametro plistaparametroNode1;
        {
            // Block
        PParametro pparametroNode2;
        TVirgula tvirgulaNode3;
        PListaParametro plistaparametroNode4;
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        plistaparametroNode4 = (PListaParametro)nodeArrayList3.get(0);

        plistaparametroNode1 = new AListaParametroListaParametro(pparametroNode2, tvirgulaNode3, plistaparametroNode4);
        }
	nodeList.add(plistaparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AParametroListaParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaParametro plistaparametroNode1;
        {
            // Block
        PParametro pparametroNode2;
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);

        plistaparametroNode1 = new AParametroListaParametro(pparametroNode2);
        }
	nodeList.add(plistaparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AParametroParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TId tidNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pparametroNode1 = new AParametroParametro(ptipoNode2, tidNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ACondComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        PComando pcomandoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoNode1 = new ACondComando(tseNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ACondElseComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        PComandoElse pcomandoelseNode6;
        TSenao tsenaoNode7;
        PComando pcomandoNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        pcomandoelseNode6 = (PComandoElse)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pcomandoNode8 = (PComando)nodeArrayList7.get(0);

        pcomandoNode1 = new ACondElseComando(tseNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, pcomandoelseNode6, tsenaoNode7, pcomandoNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ALoopComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        PComando pcomandoNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoNode1 = new ALoopComando(tenquantoNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AAtribComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TId tidNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcomandoNode1 = new AAtribComando(tidNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AAcallcomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pchamadaNode3 = (PChamada)nodeArrayList1.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new ACallComando(null, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAcallcomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PIdPonto pidpontoNode2;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pidpontoNode2 = (PIdPonto)nodeArrayList1.get(0);
        pchamadaNode3 = (PChamada)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcomandoNode1 = new ACallComando(pidpontoNode2, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ABlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandoNode1 = new ABlocoComando(pblocoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ACondComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        TSe tseNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        PComandoElse pcomandoelseNode6;
        PContComandoElse pcontcomandoelseNode7;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        pcomandoelseNode6 = (PComandoElse)nodeArrayList5.get(0);
        pcontcomandoelseNode7 = (PContComandoElse)nodeArrayList6.get(0);

        pcomandoelseNode1 = new ACondComandoElse(tseNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, pcomandoelseNode6, pcontcomandoelseNode7);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ALoopComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        PComandoElse pcomandoelseNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        pcomandoelseNode6 = (PComandoElse)nodeArrayList5.get(0);

        pcomandoelseNode1 = new ALoopComandoElse(tenquantoNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, pcomandoelseNode6);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AAtribComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        TId tidNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcomandoelseNode1 = new AAtribComandoElse(tidNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AAcallcomandoelse1ComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pchamadaNode3 = (PChamada)nodeArrayList1.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pcomandoelseNode1 = new ACallComandoElse(null, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AAcallcomandoelse2ComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        PIdPonto pidpontoNode2;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pidpontoNode2 = (PIdPonto)nodeArrayList1.get(0);
        pchamadaNode3 = (PChamada)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcomandoelseNode1 = new ACallComandoElse(pidpontoNode2, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ABlocoComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoElse pcomandoelseNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandoelseNode1 = new ABlocoComandoElse(pblocoNode2);
        }
	nodeList.add(pcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AContCondContComandoElse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PContComandoElse pcontcomandoelseNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComandoElse pcomandoelseNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandoelseNode3 = (PComandoElse)nodeArrayList2.get(0);

        pcontcomandoelseNode1 = new AContCondContComandoElse(tsenaoNode2, pcomandoelseNode3);
        }
	nodeList.add(pcontcomandoelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AListaComandosListaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaComandos plistacomandosNode1;
        {
            // Block
        PComando pcomandoNode2;
        PListaComandos plistacomandosNode3;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        plistacomandosNode3 = (PListaComandos)nodeArrayList2.get(0);

        plistacomandosNode1 = new AListaComandosListaComandos(pcomandoNode2, plistacomandosNode3);
        }
	nodeList.add(plistacomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AVazioListaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaComandos plistacomandosNode1;
        {
            // Block

        plistacomandosNode1 = new AVazioListaComandos();
        }
	nodeList.add(plistacomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ABlocoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TComeca tcomecaNode2;
        PListaDecs plistadecsNode3;
        PListaComandos plistacomandosNode4;
        TTermina tterminaNode5;
        tcomecaNode2 = (TComeca)nodeArrayList1.get(0);
        plistadecsNode3 = (PListaDecs)nodeArrayList2.get(0);
        plistacomandosNode4 = (PListaComandos)nodeArrayList3.get(0);
        tterminaNode5 = (TTermina)nodeArrayList4.get(0);

        pblocoNode1 = new ABlocoBloco(tcomecaNode2, plistadecsNode3, plistacomandosNode4, tterminaNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ACondExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TSe tseNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PExp pexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        TEntao tentaoNode6;
        PCondExp2 pcondexp2Node7;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcondexp2Node7 = (PCondExp2)nodeArrayList6.get(0);

        pexpNode1 = new ACondExp(tseNode2, tparentesesesquerdoNode3, pexpNode4, tparentesesdireitoNode5, tentaoNode6, pcondexp2Node7);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ANegativoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        PExp pexpNode3;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pexpNode1 = new ANegativoExp(tsubtracaoNode2, pexpNode3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ASomaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TAdicao tadicaoNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tadicaoNode3 = (TAdicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new ASomaExp(ptermoNode2, tadicaoNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ASubtExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TSubtracao tsubtracaoNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tsubtracaoNode3 = (TSubtracao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new ASubtExp(ptermoNode2, tsubtracaoNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AMultiExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMultiplicacao tmultiplicacaoNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultiplicacaoNode3 = (TMultiplicacao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AMultiExp(ptermoNode2, tmultiplicacaoNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ADivExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TDivisao tdivisaoNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tdivisaoNode3 = (TDivisao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new ADivExp(ptermoNode2, tdivisaoNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AModExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TModulo tmoduloNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmoduloNode3 = (TModulo)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AModExp(ptermoNode2, tmoduloNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AIgualExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TIgualdade tigualdadeNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tigualdadeNode3 = (TIgualdade)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AIgualExp(ptermoNode2, tigualdadeNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMenorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMenorQue tmenorqueNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmenorqueNode3 = (TMenorQue)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AMenorExp(ptermoNode2, tmenorqueNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ADifExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TNegacao tnegacaoNode2;
        PExp pexpNode3;
        tnegacaoNode2 = (TNegacao)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pexpNode1 = new ADifExp(tnegacaoNode2, pexpNode3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AAndExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TE teNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AAndExp(ptermoNode2, teNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AOrExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        TOu touNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AOrExp(ptermoNode2, touNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ABlocoExpExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PBlocoExp pblocoexpNode2;
        pblocoexpNode2 = (PBlocoExp)nodeArrayList1.get(0);

        pexpNode1 = new ABlocoExpExp(pblocoexpNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpNode1 = new ATermoExp(ptermoNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AContCondCondExp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondExp2 pcondexp2Node1;
        {
            // Block
        PExp pexpNode2;
        PCondExp3 pcondexp3Node3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        pcondexp3Node3 = (PCondExp3)nodeArrayList2.get(0);

        pcondexp2Node1 = new AContCondCondExp2(pexpNode2, pcondexp3Node3);
        }
	nodeList.add(pcondexp2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AFimCondCondExp3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondExp3 pcondexp3Node1;
        {
            // Block
        TSenao tsenaoNode2;
        PExp pexpNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pcondexp3Node1 = new AFimCondCondExp3(tsenaoNode2, pexpNode3);
        }
	nodeList.add(pcondexp3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AInteiroTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNumeroInteiro tnumerointeiroNode2;
        tnumerointeiroNode2 = (TNumeroInteiro)nodeArrayList1.get(0);

        ptermoNode1 = new AInteiroTermo(tnumerointeiroNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ARealTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        ptermoNode1 = new ARealTermo(tnumerorealNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ATrueTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TTrue ttrueNode2;
        ttrueNode2 = (TTrue)nodeArrayList1.get(0);

        ptermoNode1 = new ATrueTermo(ttrueNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AFalseTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TFalse tfalseNode2;
        tfalseNode2 = (TFalse)nodeArrayList1.get(0);

        ptermoNode1 = new AFalseTermo(tfalseNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AIdCallTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PIdCall pidcallNode2;
        pidcallNode2 = (PIdCall)nodeArrayList1.get(0);

        ptermoNode1 = new AIdCallTermo(pidcallNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AParTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TParentesesEsquerdo tparentesesesquerdoNode2;
        PExp pexpNode3;
        TParentesesDireito tparentesesdireitoNode4;
        tparentesesesquerdoNode2 = (TParentesesEsquerdo)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tparentesesdireitoNode4 = (TParentesesDireito)nodeArrayList3.get(0);

        ptermoNode1 = new AParTermo(tparentesesesquerdoNode2, pexpNode3, tparentesesdireitoNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AIdIdCall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdCall pidcallNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidcallNode1 = new AIdIdCall(tidNode2);
        }
	nodeList.add(pidcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AAcallidcall1IdCall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdCall pidcallNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pchamadaNode3 = (PChamada)nodeArrayList1.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pidcallNode1 = new ACallIdCall(null, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pidcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AAcallidcall2IdCall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdCall pidcallNode1;
        {
            // Block
        PIdPonto pidpontoNode2;
        PChamada pchamadaNode3;
        TPontoVirgula tpontovirgulaNode4;
        pidpontoNode2 = (PIdPonto)nodeArrayList1.get(0);
        pchamadaNode3 = (PChamada)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pidcallNode1 = new ACallIdCall(pidpontoNode2, pchamadaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pidcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AAatribidcall1IdCall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdCall pidcallNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PAtributo patributoNode3;
        TPontoVirgula tpontovirgulaNode4;
        patributoNode3 = (PAtributo)nodeArrayList1.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pidcallNode1 = new AAtribIdCall(null, patributoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pidcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AAatribidcall2IdCall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdCall pidcallNode1;
        {
            // Block
        PIdPonto pidpontoNode2;
        PAtributo patributoNode3;
        TPontoVirgula tpontovirgulaNode4;
        pidpontoNode2 = (PIdPonto)nodeArrayList1.get(0);
        patributoNode3 = (PAtributo)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pidcallNode1 = new AAtribIdCall(pidpontoNode2, patributoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pidcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AIdPontoIdPonto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdPonto pidpontoNode1;
        {
            // Block
        TId tidNode2;
        TPonto tpontoNode3;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tpontoNode3 = (TPonto)nodeArrayList2.get(0);

        pidpontoNode1 = new AIdPontoIdPonto(tidNode2, tpontoNode3);
        }
	nodeList.add(pidpontoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ABlocoExpBlocoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExp pblocoexpNode1;
        {
            // Block
        TComeca tcomecaNode2;
        PListaDecCons plistadecconsNode3;
        PExp pexpNode4;
        TTermina tterminaNode5;
        tcomecaNode2 = (TComeca)nodeArrayList1.get(0);
        plistadecconsNode3 = (PListaDecCons)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tterminaNode5 = (TTermina)nodeArrayList4.get(0);

        pblocoexpNode1 = new ABlocoExpBlocoExp(tcomecaNode2, plistadecconsNode3, pexpNode4, tterminaNode5);
        }
	nodeList.add(pblocoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AListaDecConsListaDecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaDecCons plistadecconsNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        PListaDecCons plistadecconsNode3;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);
        plistadecconsNode3 = (PListaDecCons)nodeArrayList2.get(0);

        plistadecconsNode1 = new AListaDecConsListaDecCons(pdecconsNode2, plistadecconsNode3);
        }
	nodeList.add(plistadecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AVazioListaDecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaDecCons plistadecconsNode1;
        {
            // Block

        plistadecconsNode1 = new AVazioListaDecCons();
        }
	nodeList.add(plistadecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AChamadaChamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TId tidNode2;
        TParentesesEsquerdo tparentesesesquerdoNode3;
        PListaExp plistaexpNode4;
        TParentesesDireito tparentesesdireitoNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparentesesesquerdoNode3 = (TParentesesEsquerdo)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tparentesesdireitoNode5 = (TParentesesDireito)nodeArrayList4.get(0);

        pchamadaNode1 = new AChamadaChamada(tidNode2, tparentesesesquerdoNode3, plistaexpNode4, tparentesesdireitoNode5);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AListaExpListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        PListaExp plistaexpNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);

        plistaexpNode1 = new AListaExpListaExp(pexpNode2, tvirgulaNode3, plistaexpNode4);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AExpListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        plistaexpNode1 = new AExpListaExp(pexpNode2);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AVazioListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaExp plistaexpNode1;
        {
            // Block

        plistaexpNode1 = new AVazioListaExp();
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AVazioAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAtributo patributoNode1;
        {
            // Block

        patributoNode1 = new AVazioAtributo();
        }
	nodeList.add(patributoNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {2, SHIFT, 1}, },
			{{-1, ERROR, 1}, {38, SHIFT, 7}, },
			{{-1, ERROR, 2}, {41, ACCEPT, -1}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 4}, {1, SHIFT, 8}, },
			{{-1, REDUCE, 5}, {0, SHIFT, 9}, },
			{{-1, REDUCE, 3}, {2, SHIFT, 10}, },
			{{-1, ERROR, 7}, {3, SHIFT, 12}, {4, SHIFT, 13}, },
			{{-1, ERROR, 8}, {2, SHIFT, 10}, },
			{{-1, ERROR, 9}, {2, SHIFT, 16}, },
			{{-1, ERROR, 10}, {38, SHIFT, 18}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 12}, {38, SHIFT, 19}, },
			{{-1, REDUCE, 10}, {6, SHIFT, 20}, {8, SHIFT, 21}, {9, SHIFT, 22}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 16}, {38, SHIFT, 28}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 18}, {4, SHIFT, 13}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 20}, {38, SHIFT, 29}, },
			{{-1, ERROR, 21}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, ERROR, 22}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, },
			{{-1, REDUCE, 12}, {14, SHIFT, 38}, {15, SHIFT, 39}, {18, SHIFT, 40}, },
			{{-1, REDUCE, 10}, {6, SHIFT, 20}, {8, SHIFT, 21}, {9, SHIFT, 22}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 28}, {3, SHIFT, 12}, },
			{{-1, ERROR, 29}, {37, SHIFT, 46}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 34}, {37, SHIFT, 46}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 37}, {37, SHIFT, 49}, },
			{{-1, ERROR, 38}, {15, SHIFT, 52}, },
			{{-1, ERROR, 39}, {37, SHIFT, 53}, },
			{{-1, ERROR, 40}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, ERROR, 41}, {5, SHIFT, 55}, },
			{{-1, REDUCE, 12}, {14, SHIFT, 38}, {15, SHIFT, 39}, {18, SHIFT, 40}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 23}, {7, SHIFT, 57}, },
			{{-1, ERROR, 47}, {1, SHIFT, 58}, },
			{{-1, ERROR, 48}, {1, SHIFT, 59}, },
			{{-1, ERROR, 49}, {10, SHIFT, 60}, },
			{{-1, REDUCE, 25}, {7, SHIFT, 61}, },
			{{-1, ERROR, 51}, {1, SHIFT, 62}, },
			{{-1, ERROR, 52}, {37, SHIFT, 63}, },
			{{-1, ERROR, 53}, {16, SHIFT, 64}, },
			{{-1, ERROR, 54}, {37, SHIFT, 65}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 57}, {37, SHIFT, 46}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 61}, {37, SHIFT, 49}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 63}, {16, SHIFT, 85}, },
			{{-1, REDUCE, 38}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, ERROR, 65}, {16, SHIFT, 90}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 89}, {9, SHIFT, 22}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 69}, {16, SHIFT, 94}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 81}, {16, SHIFT, 97}, {23, SHIFT, 98}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 72}, {26, SHIFT, 99}, {28, SHIFT, 100}, {29, SHIFT, 101}, {30, SHIFT, 102}, {31, SHIFT, 103}, {32, SHIFT, 104}, {33, SHIFT, 105}, {35, SHIFT, 106}, {36, SHIFT, 107}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 94}, {37, SHIFT, 108}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 82}, {1, SHIFT, 111}, },
			{{-1, ERROR, 83}, {1, SHIFT, 112}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 38}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, ERROR, 86}, {37, SHIFT, 114}, },
			{{-1, ERROR, 87}, {17, SHIFT, 115}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 40}, {7, SHIFT, 116}, },
			{{-1, REDUCE, 38}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, REDUCE, 89}, {9, SHIFT, 22}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 93}, {17, SHIFT, 120}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {17, REDUCE, 93}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 108}, {16, SHIFT, 97}, },
			{{-1, ERROR, 109}, {1, SHIFT, 133}, },
			{{-1, ERROR, 110}, {1, SHIFT, 134}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 113}, {17, SHIFT, 135}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 115}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, ERROR, 116}, {11, SHIFT, 30}, {12, SHIFT, 31}, {13, SHIFT, 32}, {38, SHIFT, 33}, },
			{{-1, ERROR, 117}, {17, SHIFT, 145}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 119}, {5, SHIFT, 146}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 121}, {17, SHIFT, 147}, },
			{{-1, REDUCE, 92}, {7, SHIFT, 148}, },
			{{-1, ERROR, 123}, {17, SHIFT, 149}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 135}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, REDUCE, 17}, {6, SHIFT, 20}, {8, SHIFT, 21}, {9, SHIFT, 22}, },
			{{-1, ERROR, 137}, {16, SHIFT, 153}, },
			{{-1, ERROR, 138}, {16, SHIFT, 154}, },
			{{-1, ERROR, 139}, {16, SHIFT, 97}, {22, SHIFT, 155}, {23, SHIFT, 98}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 142}, {37, SHIFT, 108}, },
			{{-1, ERROR, 143}, {1, SHIFT, 157}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 147}, {27, SHIFT, 159}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {17, REDUCE, 93}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 17}, {6, SHIFT, 20}, {8, SHIFT, 21}, {9, SHIFT, 22}, },
			{{-1, REDUCE, 57}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 156}, {1, SHIFT, 167}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 57}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, ERROR, 163}, {5, SHIFT, 171}, },
			{{-1, ERROR, 164}, {17, SHIFT, 172}, },
			{{-1, ERROR, 165}, {17, SHIFT, 173}, },
			{{-1, ERROR, 166}, {1, SHIFT, 174}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 168}, {20, SHIFT, 175}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 172}, {4, SHIFT, 136}, {19, SHIFT, 177}, {21, SHIFT, 178}, {37, SHIFT, 179}, },
			{{-1, ERROR, 173}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 177}, {16, SHIFT, 187}, },
			{{-1, ERROR, 178}, {16, SHIFT, 188}, },
			{{-1, ERROR, 179}, {16, SHIFT, 97}, {22, SHIFT, 189}, {23, SHIFT, 98}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 181}, {20, SHIFT, 190}, },
			{{-1, REDUCE, 48}, {20, REDUCE, 54}, },
			{{-1, ERROR, 183}, {37, SHIFT, 108}, },
			{{-1, ERROR, 184}, {1, SHIFT, 192}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, REDUCE, 94}, {4, SHIFT, 67}, {16, SHIFT, 68}, {19, SHIFT, 69}, {24, SHIFT, 70}, {25, SHIFT, 71}, {26, SHIFT, 72}, {34, SHIFT, 73}, {37, SHIFT, 74}, {39, SHIFT, 75}, {40, SHIFT, 76}, },
			{{-1, ERROR, 190}, {4, SHIFT, 136}, {19, SHIFT, 137}, {21, SHIFT, 138}, {37, SHIFT, 139}, },
			{{-1, ERROR, 191}, {1, SHIFT, 197}, },
			{{-1, REDUCE, 46}, {20, REDUCE, 52}, },
			{{-1, ERROR, 193}, {17, SHIFT, 198}, },
			{{-1, ERROR, 194}, {17, SHIFT, 199}, },
			{{-1, ERROR, 195}, {1, SHIFT, 200}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 47}, {20, REDUCE, 53}, },
			{{-1, ERROR, 198}, {4, SHIFT, 136}, {19, SHIFT, 177}, {21, SHIFT, 178}, {37, SHIFT, 179}, },
			{{-1, ERROR, 199}, {4, SHIFT, 136}, {19, SHIFT, 177}, {21, SHIFT, 178}, {37, SHIFT, 179}, },
			{{-1, REDUCE, 45}, {20, REDUCE, 51}, },
			{{-1, ERROR, 201}, {20, SHIFT, 203}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 203}, {4, SHIFT, 136}, {19, SHIFT, 177}, {21, SHIFT, 178}, {37, SHIFT, 179}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 55}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, {6, 11}, {8, 15}, },
			{{-1, 4}, {9, 17}, },
			{{-1, 5}, },
			{{-1, 14}, },
			{{-1, 6}, },
			{{-1, 23}, {24, 45}, },
			{{-1, 41}, {42, 56}, },
			{{-1, 24}, {136, 151}, {151, 151}, },
			{{-1, 152}, {151, 161}, },
			{{-1, 25}, },
			{{-1, 26}, },
			{{-1, 27}, {67, 91}, {91, 91}, },
			{{-1, 50}, },
			{{-1, 47}, {34, 48}, {57, 66}, },
			{{-1, 51}, {61, 84}, },
			{{-1, 86}, {21, 34}, {40, 54}, },
			{{-1, 35}, {22, 37}, },
			{{-1, 36}, },
			{{-1, 42}, },
			{{-1, 43}, },
			{{-1, 44}, },
			{{-1, 87}, {85, 113}, {90, 117}, },
			{{-1, 88}, {116, 144}, },
			{{-1, 89}, },
			{{-1, 162}, {115, 140}, {135, 150}, {172, 180}, {173, 185}, {190, 196}, {198, 180}, {199, 185}, {203, 196}, },
			{{-1, 181}, {198, 201}, {199, 202}, {203, 205}, },
			{{-1, 204}, },
			{{-1, 163}, {162, 170}, },
			{{-1, 141}, {172, 182}, {198, 182}, {199, 182}, {203, 182}, },
			{{-1, 122}, {60, 77}, {68, 93}, {72, 95}, {73, 96}, {92, 119}, {94, 121}, {99, 124}, {100, 125}, {101, 126}, {102, 127}, {103, 128}, {104, 129}, {105, 130}, {106, 131}, {107, 132}, {145, 158}, {153, 164}, {154, 165}, {155, 166}, {159, 168}, {175, 186}, {187, 193}, {188, 194}, {189, 195}, },
			{{-1, 169}, },
			{{-1, 176}, },
			{{-1, 78}, },
			{{-1, 79}, },
			{{-1, 80}, {115, 142}, {135, 142}, {152, 142}, {162, 142}, {172, 183}, {173, 142}, {190, 142}, {198, 183}, {199, 183}, {203, 183}, },
			{{-1, 81}, },
			{{-1, 92}, {91, 118}, },
			{{-1, 82}, {80, 109}, {115, 143}, {135, 143}, {142, 156}, {152, 143}, {162, 143}, {172, 184}, {173, 143}, {183, 191}, {190, 143}, {198, 184}, {199, 184}, {203, 184}, },
			{{-1, 123}, {148, 160}, },
			{{-1, 83}, {80, 110}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'classe'",
			"expecting: cid",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: '&', ';'",
			"expecting: 'classe', EOF",
			"expecting: 'filha da classe', 'começa'",
			"expecting: 'termina', 'objeto', 'var', 'cons', '=>', 'procedimento', 'função'",
			"expecting: 'começa'",
			"expecting: 'int', 'bool', 'real', cid",
			"expecting: 'int', 'bool', 'real'",
			"expecting: 'termina', '=>', 'procedimento', 'função'",
			"expecting: 'começa', 'termina', 'objeto', 'var', 'cons', '=>', 'procedimento', 'função', 'se', 'enquanto', id",
			"expecting: 'filha da classe'",
			"expecting: id",
			"expecting: 'procedimento'",
			"expecting: 'termina'",
			"expecting: ';', ','",
			"expecting: ':='",
			"expecting: '('",
			"expecting: ';', 'começa', '(', 'se', 'true', 'false', '-', '!', id, numero inteiro, numero real",
			"expecting: ';', 'começa', 'termina', 'objeto', 'var', 'cons', '=>', 'procedimento', '(', 'função', 'se', 'enquanto', 'true', 'false', '-', '!', id, numero inteiro, numero real",
			"expecting: 'int', 'bool', 'real', ')', cid",
			"expecting: ';', 'começa', 'cons', '(', 'se', 'true', 'false', '-', '!', id, numero inteiro, numero real",
			"expecting: ';', 'termina', ',', '=>', 'procedimento', ')', 'função', 'senão', '-', '+', '*', '/', '%', '==', '<', 'e', 'ou'",
			"expecting: ';', 'termina', ',', '=>', 'procedimento', '(', ')', 'função', 'senão', '.', '-', '+', '*', '/', '%', '==', '<', 'e', 'ou'",
			"expecting: ';', id",
			"expecting: ';', 'termina', ',', '=>', 'procedimento', ')', 'função', 'senão'",
			"expecting: ')'",
			"expecting: ',', ')'",
			"expecting: ';', 'começa', '(', ')', 'se', 'true', 'false', '-', '!', id, numero inteiro, numero real",
			"expecting: 'começa', 'se', 'enquanto', id",
			"expecting: 'começa', 'termina', 'objeto', 'var', 'cons', 'se', 'enquanto', id",
			"expecting: '(', '=', '.'",
			"expecting: 'começa', 'termina', '=>', 'procedimento', 'função', 'se', 'enquanto', id",
			"expecting: 'então'",
			"expecting: 'começa', 'termina', 'se', 'enquanto', id",
			"expecting: 'senão'",
			"expecting: 'começa', 'termina', '=>', 'procedimento', 'função', 'se', 'senão', 'enquanto', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 5, 6, 0, 0, 1, 2, 1, 7, 4, 2, 1, 3, 8, 4, 1, 9, 10, 11, 7, 12, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 14, 9, 16, 11, 11, 11, 11, 17, 3, 3, 18, 17, 3, 14, 19, 14, 5, 16, 14, 12, 12, 20, 14, 21, 19, 22, 19, 3, 23, 20, 19, 24, 24, 20, 20, 25, 24, 24, 17, 24, 24, 26, 27, 3, 3, 3, 22, 14, 28, 28, 29, 22, 23, 20, 28, 20, 27, 27, 30, 26, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 3, 3, 24, 24, 28, 29, 31, 9, 28, 20, 16, 24, 28, 29, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 24, 24, 31, 32, 19, 19, 33, 11, 34, 14, 3, 28, 20, 27, 35, 30, 3, 11, 32, 36, 20, 20, 20, 3, 34, 11, 20, 28, 36, 36, 16, 28, 28, 3, 34, 37, 27, 16, 38, 31, 31, 34, 20, 27, 19, 19, 33, 34, 37, 38, 14, 3, 34, 27, 20, 20, 20, 31, 3, 38, 28, 28, 3, 34, 38, 31, 31, 38, 37, 37, 31, 37, 37, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
